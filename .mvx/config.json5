{
  // mvx project configuration
  // See https://github.com/gnodet/mvx for documentation

  // Project metadata
  project: {
    name: "mvx",
    description: ""
  },

  // Tool versions and configurations
  tools: {
    java: {
      version: "17",
      distribution: "zulu"
    },
    maven: {
      version: "4.0.0-rc-4"
    },
    node: {
      version: "lts"
    },
    go: {
      version: "1.24.2"
    }
  },

  // Custom commands
  commands: {
    build: {
      description: "Build mvx binary (use make build for platform-optimized builds)",
      script: "go build -o mvx-binary .",
      override: true
    },

    test: {
      description: "Run all tests",
      script: "go test -v ./...",
      override: true
    },

    "build-all": {
      description: "Build for all platforms (use make build-all for now)",
      script: "make build-all"
    },

    checksums: {
      description: "Generate checksums for release binaries (use make checksums for now)",
      script: "make checksums"
    },

    clean: {
      description: "Clean build artifacts",
      script: "rm -f mvx-binary mvx-dev && rm -rf dist/ && rm -rf .mvx/local/ .mvx/tools/ .mvx/versions/",
      override: true
    },

    fmt: {
      description: "Format code",
      script: "go fmt ./..."
    },

    lint: {
      description: "Run linter",
      script: "golangci-lint run"
    },

    deps: {
      description: "Download dependencies",
      script: "go mod download && go mod tidy"
    },

    "test-integration": {
      description: "Run integration tests",
      script: "cd test && go test -v -timeout=5m ./..."
    },

    benchmark: {
      description: "Run benchmarks",
      script: "cd test && go test -bench=. -benchtime=3s ./..."
    },

    hello: {
      description: "Say hello",
      script: "echo Hello from mvx! && mvn -v"
    },

    "website build": {
      description: "Build the website using ROQ",
      script: "cd website && mvn quarkus\\:build",
      override: true
    },

    "website serve": {
      description: "Serve the website using ROQ dev mode",
      script: "cd website && mvn quarkus\\:dev -Dquarkus.http.port=8081",
      override: true
    }
  }
}
